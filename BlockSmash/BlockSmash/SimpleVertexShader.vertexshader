#version 330
// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
//attribute vec3 vertexPosition_modelspace;

out vec4 fragmentColor;
//uniform mat4 diffMat4;

void main(){

//	gl_Position =  diffMat4 * vec4(vertexPosition_modelspace,1);
    gl_Position.xyz = vertexPosition_modelspace;
    gl_Position.w = 1.0;
//    gl_FrontColor = vec4(drawColor,0);
    fragmentColor = vec4(vertexColor,0);

}

